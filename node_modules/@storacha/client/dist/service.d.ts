export const accessServiceURL: URL;
export const accessServicePrincipal: client.PrincipalView<"did:web:up.storacha.network">;
export const defaultHeaders: {
    'X-Client': string;
};
export function accessServiceConnection(options?: {
    headers?: Record<string, string> | undefined;
    id?: client.Principal<`did:${string}:${string}`> | undefined;
    url?: URL | undefined;
}): client.ConnectionView<any>;
export const uploadServiceURL: URL;
export const uploadServicePrincipal: client.PrincipalView<"did:web:up.storacha.network">;
export function uploadServiceConnection(options?: {
    headers?: Record<string, string> | undefined;
    id?: client.Principal<`did:${string}:${string}`> | undefined;
    url?: URL | undefined;
}): client.ConnectionView<any>;
export const filecoinServiceURL: URL;
export const filecoinServicePrincipal: client.PrincipalView<"did:web:up.storacha.network">;
export function filecoinServiceConnection(options?: {
    headers?: Record<string, string> | undefined;
    id?: client.Principal<`did:${string}:${string}`> | undefined;
    url?: URL | undefined;
}): client.ConnectionView<any>;
export const gatewayServiceURL: URL;
export const gatewayServicePrincipal: client.PrincipalView<"did:web:w3s.link">;
export function gatewayServiceConnection({ id, url }?: {
    id?: client.Principal<`did:${string}:${string}`> | undefined;
    url?: URL | undefined;
}): client.ConnectionView<any>;
/** @type {() => import('./types.js').ServiceConf} */
export const serviceConf: () => import("./types.js").ServiceConf;
export { receiptsEndpoint };
import * as client from '@ucanto/client';
import { receiptsEndpoint } from '@storacha/upload-client';
//# sourceMappingURL=service.d.ts.map