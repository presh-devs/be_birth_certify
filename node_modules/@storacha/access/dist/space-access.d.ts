/**
 * Space access utilities and validation
 */
export class SpaceAccess {
    /**
     * Creates and validates a space access configuration
     *
     * @template {API.SpaceAccessType} T
     * @param {T} [access] - The access configuration to validate
     * @returns {T}
     * @throws {Error} When access configuration is invalid
     */
    static from<T extends API.SpaceAccessType>(access?: T): T;
    /**
     * Creates a public space access configuration
     *
     * @returns {API.PublicAccess}
     */
    static public(): API.PublicAccess;
    /**
     * Creates a private space access configuration with encryption provider
     *
     * @param {string} [provider] - The encryption provider. Defaults to `google-kms`.
     * @param {string} [algorithm] - The encryption algorithm. Defaults to `RSA_DECRYPT_OAEP_3072_SHA256`.
     * @returns {API.PrivateAccess<API.EncryptionProvider>}
     * @throws {Error} When provider/algorithm combination is invalid
     */
    static private(provider?: string, algorithm?: string): API.PrivateAccess<API.EncryptionProvider>;
}
import * as API from './types.js';
//# sourceMappingURL=space-access.d.ts.map